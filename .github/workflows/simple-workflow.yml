# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  workflow_dispatch

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-step:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    outputs:
      output1: ${{ steps.get-build-number.outputs.build-number }}
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - id: get-build-number
        uses: ./.github/actions/get-build-number
        with:
          version-number: ${{ github.run_number }}${{ github.run_attempt }}

      - id: output-build-number
        name: Export output to other build steps
        run: |
          echo Build number is ${{ steps.get-build-number.outputs.build-number }}
          echo ::set-output name=build-number::${{ steps.get-build-number.outputs.build-number }}

  consume-build-number:
    runs-on: ubuntu-latest
    needs: build-step
    steps:
      - id: print-build-number
        name: Print build number from step output
        
        run: |
          echo Build number from output: ${{ needs.build-step.outputs.output1 }}

  dump_contexts_to_log:
      runs-on: ubuntu-latest
      steps:
        - name: Print environment variable
          run: echo ${{needs.build-step.outputs.test}}
        - name: Dump GitHub context
          id: github_context_step
          run: echo '${{ toJSON(github) }}'
        # - name: Dump job context
        #   run: echo '${{ toJSON(job) }}'
        # - name: Dump steps context
        #   run: echo '${{ toJSON(steps) }}'
        # - name: Dump runner context
        #   run: echo '${{ toJSON(runner) }}'
        # - name: Dump strategy context
        #   run: echo '${{ toJSON(strategy) }}'
        # - name: Dump matrix context
        #   run: echo '${{ toJSON(matrix) }}'

  run-docker:
    runs-on: ubuntu-latest
    steps:
      - id: run-docker
        name: Run Hello World container
        run: |
          docker run hello-world
